// @flow
export type Options = {
  cwd?: ?string,
  env?: ?{ [varName: string]: any },
  argv0?: ?string,
  detached?: ?boolean,
  uid?: ?number,
  gid?: ?number,
  shell?: ?boolean | string,
  windowsVerbatimArguments?: ?boolean,
  windowsHide?: ?boolean,
};

export type RunContext = {
  result: {
    stdout: string,
    stderr: string,
    code: null | number,
    error: boolean,
  },
  completion: Promise<void>,
  debug(): RunContext,
  outputContains(value: string | RegExp): Promise<void>,
  clearOutputContainsBuffer(): void,
  write(data: string | Buffer): void,
  kill(signal?: string): void,
};

interface Exports {
  spawn(cmd: string): RunContext;
  spawn(cmd: string, args: Array<string>): RunContext;
  spawn(cmd: string, options: Options): RunContext;
  spawn(cmd: string, args: Array<string>, options: Options): RunContext;
}

declare module.exports: Exports;
